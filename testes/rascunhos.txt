Cad Cliente PHP

<?php

// Cria a conexão com o banco
$local = '127.0.0.1';
$user = 'root';
$pass = "";
$bank = 'supermercado';

//Cria uma instância da classe mysqli
$bank = new mysqli("$local", "$user", "$pass", "$bank");

//Recupera dados do formulário
$name = $_POST['nome'];
$cpf = $_POST['cpf'];
$end = $_POST['gmail'];
$house = $_POST['moradia'];
$tel = $_POST['telefone'];
$passw = $_POST['senha']; //Preciso usar a função para criptografar a senha


if($bank->connect_error != null){
    die("Erro na conexão");
}
else{

    //Chama uma outra classe para iniciar a classe mysqli e ter acesso a outros métodos
    $start = mysqli_stmt_init($bank);

    //Coloca mais segurança na hora de inserir os dados
    mysqli_stmt_prepare($start, "INSERT INTO comprador(nome,cpf, gmail,moradia,telefone,senha) VALUES(?, ?, ?, ?, ?, ?)");

    //Organiza os dados na coluna determinada. A quantidade de 's' é a quantidade dos dados
    mysqli_stmt_bind_param($start, 'ssssss', $name, $cpf, $end, $house, $tel, $passw);

    //Faz os comandos serem executados
    mysqli_stmt_execute($start);

    //Fecha as validações
    mysqli_stmt_close($start);
}

//Encerra a conexão com o banco de dados
mysqli_close($bank);
?>
____________________________________________________________________________________________________________

Login:

<?php

include 'cliente.php';

$local = '127.0.0.1';
$user = 'root';
$pass = "";
$bank = 'supermercado';

$mysql = new mysqli($local, $user, $pass, $bank);

//Recebimento do email e da senha
$gmail =  $_POST['end'];
$passw =  $_POST['passw'];

//Verifica se o hash e a senha são os mesmos do banco
//$verif_passw = password_verify($passw,$hash_passw);

if ($mysql->connect_error != null) {
    die("Conexão não realizada");
} else {
   
    // Faz a pesquisa no banco
    $search = $mysql->prepare("SELECT * FROM comprador WHERE gmail = ?");
    $search->bind_param("s", $gmail);
    $search->execute();
    $datas = $search->get_result();

    $request = array("status" => "NaoEncontrado", "message" => "Não encontrado!");

    while ($row = mysqli_fetch_array($datas, MYSQLI_ASSOC)) {
        // Verifica se o gmail corresponde no banco de dados
        if ($gmail == $row["gmail"]) {
            if($passw == $row["senha"]){
                $request = array("status" => "Encontrado", "message" => "Encontrado!");
            }
            else{
                $request = array("status" => "SenhaErrada", "message" => "Senha incorreta!");
            }
            // Não é necessário continuar o loop, pois o gmail foi encontrado
            break;
        }    
    }

    // Retorna a resposta como JSON
    header('Content-Type: application/json');
    echo json_encode($request);
}

// Encerra a conexão com o banco de dados
$mysql->close();

?>
___________________________________________________________________________________________________________

<?php

$local = '127.0.0.1';
$user = 'root';
$pass = "";
$bank = 'supermercado';

$mysql = new mysqli($local, $user, $pass, $bank);

//Recebimento do email e da senha
$gmail =  $_POST['end'];
$passw =  $_POST['passw'];

if ($mysql->connect_error != null) {
    die("Conexão não realizada");
} else {

    /*Criação de condicional para verificar se o gmail está na tebala comprador ou vendeder

    $search_tables = $mysql->query("SELECT comprador.gmail, vendedor.gmail FROM comprador, vendedor WHERE comprador.gmail = ? AND vendedor.gmail = ?");*/
   
    // Faz a pesquisa no banco
    $search = $mysql->prepare("SELECT * FROM comprador WHERE gmail = ?");
    $search->bind_param("s", $gmail);
    $search->execute();
    $datas = $search->get_result();

    $request = array("status" => "NaoEncontrado", "message" => "Não encontrado!");

    while ($row = mysqli_fetch_array($datas, MYSQLI_ASSOC)) {
        // Verifica se o gmail corresponde no banco de dados
        if ($gmail == $row["gmail"]) {
            //Verifica se o hash e a senha são os mesmos do banco  
            if(password_verify($passw, $row["senha"]) == true){
                $request = array("status" => "Encontrado", "message" => "Encontrado!");
            }
            else{
                $request = array("status" => "SenhaErrada", "message" => "Senha incorreta!");
            }
            // Não é necessário continuar o loop, pois o gmail foi encontrado
            break;
        }    
    }

    // Retorna a resposta como JSON
    header('Content-Type: application/json');
    echo json_encode($request);
}

// Encerra a conexão com o banco de dados
$mysql->close();

?>
____________________________________________________________________________________________________________

Suporte

<?php
//Criação do cadastro para suporte . Este script cria para que a senha do suporte receba o tratamento de hash e seja inserido no banco criptografado
$local = '127.0.0.1';
$user = 'root';
$pass = "";
$bank = 'supermercado';

//Cria uma instância da classe mysqli
$mysql = new mysqli("$local", "$user", "$pass", "$bank");

$gmail = $_POST["gmail"];
$passw = $_POST["senha"];

//Essa variável vai ser inserida na coluna da senha
$hash_passw = password_hash($passw, PASSWORD_DEFAULT,);

if($mysql->connect_error != null){
    die("Erro na conexão");
}
else{

    //Chama uma outra classe para iniciar a classe mysqli e ter acesso a outros métodos do prepared statements
    $start = mysqli_stmt_init($mysql);

    //Coloca mais segurança na hora de inserir os dados
    mysqli_stmt_prepare($start, "INSERT INTO suporte (gmail, senha) VALUES (?,?)");

    //Organiza os dados na coluna determinada. A quantidade de 's' é a quantidade dos dados
    mysqli_stmt_bind_param($start, "ss", $gmail, $hash_passw);

    //Faz os comandos serem executados
    mysqli_stmt_execute($start);

    //Fecha as validações
    mysqli_stmt_close($start);
}

//Encerra a conexão com o banco de dados
mysqli_close($mysql);
?>
_________________________________________________________________________________________________________________________________

SUPORTE
 
<?php
// Criação do cadastro para suporte. Este script cria para que a senha do suporte receba o tratamento de hash e seja inserido no banco criptografado
$local = '127.0.0.1';
$user = 'root';
$pass = "";
$bank = 'supermercado';

// Cria uma instância da classe mysqli
$mysql = new mysqli($local, $user, $pass, $bank);

if ($mysql->connect_error != null) {
    die("Erro na conexão");
} else {
    // Instrução SQL de inserção
    $sql = "INSERT INTO suporte(gmail, senha) VALUES('su@gmail.com', '1357')";

    // Executa a instrução SQL
    if ($mysql->query($sql) === TRUE) {
        echo "Registro inserido com sucesso!";
    } else {
        echo "Erro ao inserir registro: " . $mysql->error;
    }
}

// Encerra a conexão com o banco de dados
$mysql->close();
?>

___________________________________________________________________________________________________________

function Addition(){

    let input = document.createElement("input")
    input.className = 'setor'

    let godfather = document.querySelector("body")
    godfather.appendChild(input)

    if(input.value.length != null){
        document.addEventListener("click", function(){
        let count = 0
        count++
        let button = document.querySelector('#add')
        button.style.marginTop = '1%'
        console.log(count)
    });
    }
    else{
     document.removeEventListener("click",function(){})
    }

   console.log(input)
}

/*
    if(input){
        for(let count = 0 ; count < 2; count++){
        let button = document.querySelector('#add')
        button.style.marginTop = '10%'
        console.log(count)
        }

        if(input){
        document.addEventListener("click", function(){
        let count = 0
        count++
        let button = document.querySelector('#add')
        button.style.marginTop = '10%'
        console.log(count)
        })
    }
  
    }*/ 